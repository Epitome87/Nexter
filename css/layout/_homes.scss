@use '../abstracts/' as a;

#homes {
  display: grid;
  grid-template-columns: 1fr;
  gap: 4rem;
  padding-block: 8rem;

  @include a.breakpoint(sm) {
    grid-template-columns: repeat(2, 1fr);
  }

  @include a.breakpoint(md) {
    grid-template-columns: repeat(3, 1fr);
    // TODO: Limit Home Card with? Kind of look goofy at larger sizes!
    // justify-content: center;
    // grid-template-columns: repeat(3, minmax(min-content, 400px));
  }
}

.home {
  // THINKER: Should the overall Home Card be a Grid as well? Maybe Home Details should just be part of this Card's grid system??
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  // TODO: How should I value the first row (for image?)
  grid-template-rows: 15rem repeat(1, 1fr) max-content;
  background-color: #f9f7f6;
  // Rounded corners require us to hide overflow, as the img will block the corner
  border-radius: a.$subtle;
  overflow-y: hidden;
  text-align: center;
  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.2);
  position: relative;
}

.home img {
  grid-column: 1 / span 2;
  grid-row: 1 / span 1;
  // THINKER: I did a global img reset -- why are widths required here to prevent using up extra columns / rows?
  width: 100%;
  height: 100%;
}

.home svg {
  fill: a.$color-primary;
  height: 1.25rem;
  width: 1.25rem;
}

.home .home__favorite {
  position: absolute;
  top: 2%;
  right: 2%;
  height: 2rem;
  width: 2rem;
  cursor: pointer;
  transition: 0.3s ease-in-out;

  &:hover {
    transform: scale(1.1);
  }
}

.home h2 {
  grid-column: 1 / span 2;
  grid-row: 1 / span 1;
  background-color: #101d2c;
  color: #fff;
  align-self: end;
  justify-self: center;
  transform: translateY(50%);
  z-index: 1;
  padding: 0.5rem 1rem;
  font-family: a.$font-family-heading;
  font-size: a.$text-sm;
  border-radius: a.$subtle;
}

.home__details {
  padding-top: 2rem;
  grid-column: 1 / span 2;
  align-self: center;

  display: grid;
  grid-template-columns: repeat(2, max-content);
  // column-gap: 3rem;
  row-gap: 1.5rem;
  align-items: center;
  justify-content: space-around;
  padding: 3rem 1rem 2rem 1rem;
}

.home__location,
.home__rooms,
.home__size,
.home__price {
  display: flex;
  gap: 0.5rem;
}

.home__details p {
  color: a.$color-text-gray-400;
}

.home button {
  grid-column: 1 / span 2;
  align-self: center;

  // Override button's rounded corner here, as it looks funny inside the card
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
