@use '../abstracts/' as a;

#homes {
  display: grid;
  grid-template-columns: 1fr;
  gap: 4rem;
  padding-block: 8rem;

  @include a.breakpoint(sm) {
    grid-template-columns: repeat(2, 1fr);
  }

  @include a.breakpoint(md) {
    grid-template-columns: repeat(3, 1fr);
  }
}

.home {
  // THINKER: Should the overall Home Card be a Grid as well? Maybe Home Details should just be part of this Card's grid system??
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  // TODO: How should I value the first row (for image?)
  grid-template-rows: 15rem repeat(1, 1fr) max-content;
  background-color: #f9f7f6;
  text-align: center;
}

.home img {
  grid-column: 1 / span 2;
  grid-row: 1 / span 1;
  // THINKER: I did a global img reset -- why are widths required here to prevent using up extra columns / rows?
  width: 100%;
  height: 100%;
}

.home h2 {
  grid-column: 1 / span 2;
  grid-row: 1 / span 1;
  background-color: #101d2c;
  color: #fff;
  align-self: end;
  justify-self: center;
  transform: translateY(50%);
  z-index: 1;
  padding: 0.5rem 1rem;
  font-size: a.$text-md;
}

.home__details {
  padding-top: 2rem;
  grid-column: 1 / span 2;
  align-self: center;

  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, auto);
  row-gap: 1.5rem;
  align-items: center;

  > p {
    padding-inline: 1rem;
  }
}

.home__details p {
  color: #6D5D4B;
}

.home button {
  grid-column: 1 / span 2;
  align-self: center;
}
